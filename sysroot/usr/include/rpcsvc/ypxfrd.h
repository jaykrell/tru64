/*
 * *****************************************************************
 * *                                                               *
 * *   Copyright 2002 Compaq Information Technologies Group, L.P.  *
 * *                                                               *
 * *   The software contained on this media  is  proprietary  to   *
 * *   and  embodies  the  confidential  technology  of  Compaq    *
 * *   Computer Corporation.  Possession, use,  duplication  or    *
 * *   dissemination of the software and media is authorized only  *
 * *   pursuant to a valid written license from Compaq Computer    *
 * *   Corporation.                                                *
 * *                                                               *
 * *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
 * *   by the U.S. Government is subject to restrictions  as  set  *
 * *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
 * *   or  in  FAR 52.227-19, as applicable.                       *
 * *                                                               *
 * *****************************************************************
 */
/*
 * HISTORY
 */
/*
 *	@(#)$RCSfile: ypxfrd.h,v $ $Revision: 4.2.7.2 $ (DEC) $Date: 1994/03/29 18:59:05 $
 */
/*
 */

/* 
 * @(#)ypxfrd.x	1.1 90/07/23 4.1NFSSRC Copyr 1990 Sun Micro 
 * This is NOT source code!
 * DO NOT EDIT THIS FILE!
 */
#ifndef _RPCSVC_YPXFRD_H_
#define _RPCSVC_YPXFRD_H_

#define PBLEN 1024
#define DBLEN 4096

#include <standards.h>
#include <rpc/types.h>
#include <rpc/xdr.h>
#include <rpc/svc.h>

enum answer {
	OK = 0,
	GETDBM_EOF = 1,
	GETDBM_ERROR = 2
};
typedef enum answer answer;
_BEGIN_CPLUSPLUS
bool_t xdr_answer __((XDR *, answer *));
_END_CPLUSPLUS


typedef char pagblock[PBLEN];
_BEGIN_CPLUSPLUS
bool_t xdr_pagblock __((XDR *, pagblock));
_END_CPLUSPLUS


typedef char dirblock[DBLEN];
_BEGIN_CPLUSPLUS
bool_t xdr_dirblock __((XDR *, dirblock));
_END_CPLUSPLUS

typedef char *pathname;
_BEGIN_CPLUSPLUS
bool_t xdr_pathname __((XDR *, pathname *));
_END_CPLUSPLUS

struct hosereq {
	pathname map;
	pathname domain;
};
typedef struct hosereq hosereq;
_BEGIN_CPLUSPLUS
bool_t xdr_hosereq __((XDR *, hosereq *));
_END_CPLUSPLUS

struct pagdat {
	int blkno;
	pagblock blkdat;
};
typedef struct pagdat pagdat;
_BEGIN_CPLUSPLUS
bool_t xdr_pagdat __((XDR *, pagdat *));
_END_CPLUSPLUS

struct dirdat {
	int blkno;
	dirblock blkdat;
};
typedef struct dirdat dirdat;
_BEGIN_CPLUSPLUS
bool_t xdr_dirdat __((XDR *, dirdat *));
_END_CPLUSPLUS

struct pag {
	answer status;
	union {
		pagdat ok;
	} pag_u;
};
typedef struct pag pag;
_BEGIN_CPLUSPLUS
bool_t xdr_pag __((XDR *, pag *));
_END_CPLUSPLUS

struct paglist {
	struct pag d;
	struct paglist *next;
};
typedef struct paglist paglist;
_BEGIN_CPLUSPLUS
bool_t xdr_paglist __((XDR *, paglist *));
_END_CPLUSPLUS

struct dir {
	answer status;
	union {
		dirdat ok;
	} dir_u;
};
typedef struct dir dir;
_BEGIN_CPLUSPLUS
bool_t xdr_dir __((XDR *, dir *));
_END_CPLUSPLUS

struct dirlist {
	struct dir d;
	struct dirlist *next;
};
typedef struct dirlist dirlist;
_BEGIN_CPLUSPLUS
bool_t xdr_dirlist __((XDR *, dirlist *));
_END_CPLUSPLUS

struct du {
	struct paglist p;
	struct dirlist d;
};
typedef struct du du;
_BEGIN_CPLUSPLUS
bool_t xdr_du __((XDR *, du *));
_END_CPLUSPLUS

struct dbmfyl {
	answer status;
	union {
		struct du ok;
	} dbmfyl_u;
};
typedef struct dbmfyl dbmfyl;
_BEGIN_CPLUSPLUS
bool_t xdr_dbmfyl __((XDR *, dbmfyl *));
_END_CPLUSPLUS

#define YPXFRD 100069
#define V1 1
#define getdbm 1
_BEGIN_CPLUSPLUS
extern dbmfyl *getdbm_1 __((hosereq *, struct svc_req *));
_END_CPLUSPLUS

#endif /* _RPCSVC_YPXFRD_H_ */
