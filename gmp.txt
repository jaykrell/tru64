Some versions of gmp fail to compile with native cc.

Something about 0/0 to produce nan being a constant that cannot be evaluated.

Likely workaround:
 Compile gcc3 (3.4.6) first, which doesn't use gmp, with native cc.
 Then gcc4 with gmp with gcc3.

In particular, the sequence native cc to old gcc to newer gcc is not uncommon.
It is the sequence on HP-UX/HPPA where system cc is K&R only, compile gcc 3.3 with it,
and then newer gcc. (gcc 3.3 is the newest that does not require host ANSI C compiler).
It is also a sequence on SGI that has random old cc around.

Some configurations need this diff:

$ diff -u $HOME/s/gmp-6.2.1/gmp-impl.h.orig  $HOME/s/gmp-6.2.1/gmp-impl.h
--- $HOME/s/gmp-6.2.1/gmp-impl.h.orig  2021-07-06 22:59:32 -0400
+++ $HOME/s/gmp-6.2.1/gmp-impl.h       2021-07-06 22:59:47 -0400
@@ -154,11 +154,10 @@

 #if HAVE_INTTYPES_H      /* for uint_least32_t */
 # include <inttypes.h>
-#else
+#endif
 # if HAVE_STDINT_H
 #  include <stdint.h>
 # endif
-#endif

 #ifdef __cplusplus
 #include <cstring>  /* for strlen */

That is, include both inttypes.h and stdint.h.
Configure is broken here: The system has inttypes.h and stdint.h and uint_least32_t,
but it does not realize that it needs stdint.h to get it, and gmp
includes inttypes.h and not stdint.h.

Other than gcc4, it appears gnutls needs gmp, curl needs gnutls (or other) for https.
Perhaps openssl will satisfy curl.
