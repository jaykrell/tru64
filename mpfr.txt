Current mpfr 4.1.0 cannot be built with native cc:

"
cc: Error: /usr/users/jay/s/gcc-370d8a3d6bd6f72598eed3474d2817b1af77d961/mpfr/src/get_d.c, line 151: 
  In this statement, the libraries on this platform do not yet support compile-time evaluation of the constant expression "(double)0.0/0.0". (constfoldns)
  return MPFR_DBL_NAN;
"

Likely solution is to build gcc 3.4 (without mpfr) and then gcc 4 or newer with that.

Using an older mpfr might also work.

Or patch mpfr here.

Or really try CFLAGS=-ieee
Similar happened in vim and this fixed it.

mpfr-2.4.2

gcc-4.7.4/mpfr/vasprintf.c -o vasprintf.o
/usr/users/jay/s/gcc-4.7.4/mpfr/vasprintf.c: In function 'buffer_widen':
/usr/users/jay/s/gcc-4.7.4/mpfr/vasprintf.c:554:3: error: 'SIZE_MAX' undeclared (first use in this function)
/usr/users/jay/s/gcc-4.7.4/mpfr/vasprintf.c:554:3: note: each undeclared identifier is reported only once for each function it appears in
/usr/users/jay/s/gcc-4.7.4/mpfr/vasprintf.c: In function 'buffer_pad':
/usr/users/jay/s/gcc-4.7.4/mpfr/vasprintf.c:590:3: error: 'SIZE_MAX' undeclared (first use in this function)
/usr/users/jay/s/gcc-4.7.4/mpfr/vasprintf.c: In function 'buffer_sandwich':
/usr/users/jay/s/gcc-4.7.4/mpfr/vasprintf.c:625:3: error: 'SIZE_MAX' undeclared (first use in this function)

vasprintf.c:

#if HAVE_INTTYPES_H
# include <inttypes.h> /* for intmax_t */
#else
# if HAVE_STDINT_H
#  include <stdint.h> /* for WINT_MAX in particular */
# endif
#endif

Change the else to endif and remove last endif.
